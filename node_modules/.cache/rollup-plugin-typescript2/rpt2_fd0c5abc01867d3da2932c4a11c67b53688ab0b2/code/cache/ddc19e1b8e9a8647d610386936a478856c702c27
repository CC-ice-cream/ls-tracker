{"code":"import { TrackerConfig } from \"../types/index\";\r\nimport { createHistoryEvent } from \"../utils/pv\";\r\nexport default class Tracker {\r\n    constructor(options) {\r\n        this.data = Object.assign(this.initDef(), options);\r\n        this.installTracker();\r\n    }\r\n    /**\r\n     * @description: 初始化参数\r\n     * @param {*} DefaultOptions\r\n     * @return {*}\r\n     */\r\n    initDef() {\r\n        window.history[\"pushState\"] = createHistoryEvent(\"pushState\");\r\n        window.history[\"replaceState\"] = createHistoryEvent(\"replaceState\");\r\n        return {\r\n            sdkVersion: TrackerConfig,\r\n            historyTracker: false,\r\n            hashTracker: false,\r\n            domTracker: false,\r\n            jsError: false,\r\n        };\r\n    }\r\n    /**\r\n     * @description: 捕获异常事件\r\n     * @param mousueEventList 监听事件列表\r\n     * @param trgetKey key 由后端指定\r\n     * @param data\r\n     * @return void\r\n     */\r\n    captureEvent(mousueEventList, trgetKey, data) {\r\n        mousueEventList.forEach((event) => {\r\n            window.addEventListener(event, () => {\r\n                console.log(\"TRACKER Message: addEventListener: \", event);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @description: 初始化监听事件列表\r\n     * @param {*} if\r\n     * @return {*}\r\n     */\r\n    installTracker() {\r\n        if (this.data.historyTracker) {\r\n            this.captureEvent([\"pushState\", \"replaceState\", \"popstate\"], \"history-pv\");\r\n        }\r\n    }\r\n}\r\n","references":["D:/LocalRepository/TRACKER/src/types/index.ts","D:/LocalRepository/TRACKER/src/utils/pv.ts"]}
